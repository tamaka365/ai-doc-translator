diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000000000000000000000000000000000000..7c2feb7ef4731d430facfcafcbac59e3ea861849
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,3 @@
+{
+  "editor.formatOnSave": false
+}
diff --git a/dist/index.js b/dist/index.js
index 5813c4a26e9fc4b32625e86f1e00541d5af6a223..edb4c3e98a19ec39ada94d2186da896023c59609 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -152,7 +152,7 @@ class GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-const BASE_URL = "https://generativelanguage.googleapis.com";
+const BASE_URL = "https://gemini-proxy.cndocs.net";
 const API_VERSION = "v1";
 /**
  * We can't `require` package.json if this runs on web. We will use rollup to
@@ -191,14 +191,16 @@ function getClientHeaders() {
 }
 async function makeRequest(url, body) {
     let response;
+    const urlStr = url.toString();
+    const key = urlStr.includes('?') ? `&key=${url.apiKey}` : `?key=${url.apiKey}`
     try {
-        response = await fetch(url.toString(), {
+        response = await fetch(`${urlStr}${key}`, {
             method: "POST",
-            headers: {
-                "Content-Type": "application/json",
-                "x-goog-api-client": getClientHeaders(),
-                "x-goog-api-key": url.apiKey,
-            },
+            // headers: {
+            //     "Content-Type": "application/json",
+            //     "x-goog-api-client": getClientHeaders(),
+            //     "x-goog-api-key": url.apiKey,
+            // },
             body,
         });
         if (!response.ok) {
diff --git a/dist/index.mjs b/dist/index.mjs
index 565f3bb65a3d5c963d7d82d303bdcc64fbbb5674..1b8e32afa2df1642fa93788412673ea08d8d255e 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -150,7 +150,7 @@ class GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-const BASE_URL = "https://generativelanguage.googleapis.com";
+const BASE_URL = "https://gemini-proxy.cndocs.net";
 const API_VERSION = "v1";
 /**
  * We can't `require` package.json if this runs on web. We will use rollup to
@@ -174,9 +174,9 @@ class RequestUrl {
         this.stream = stream;
     }
     toString() {
-        let url = `${BASE_URL}/${API_VERSION}/models/${this.model}:${this.task}`;
+        let url = `${BASE_URL}/${API_VERSION}/models/${this.model}:${this.task}?key=${this.apiKey}`;
         if (this.stream) {
-            url += "?alt=sse";
+            url += "&alt=sse";
         }
         return url;
     }
@@ -192,11 +192,11 @@ async function makeRequest(url, body) {
     try {
         response = await fetch(url.toString(), {
             method: "POST",
-            headers: {
-                "Content-Type": "application/json",
-                "x-goog-api-client": getClientHeaders(),
-                "x-goog-api-key": url.apiKey,
-            },
+            // headers: {
+            //     "Content-Type": "application/json",
+            //     "x-goog-api-client": getClientHeaders(),
+            //     "x-goog-api-key": url.apiKey,
+            // },
             body,
         });
         if (!response.ok) {
